import{_ as s,c as i,ae as n,o as e}from"./chunks/framework.Dqr_tXBJ.js";const k=JSON.parse('{"title":"Technical Specifications","description":"","frontmatter":{},"headers":[],"relativePath":"protocol/technical-specs.md","filePath":"protocol/technical-specs.md"}'),t={name:"protocol/technical-specs.md"};function l(o,a,p,r,h,c){return e(),i("div",null,a[0]||(a[0]=[n(`<h1 id="technical-specifications" tabindex="-1">Technical Specifications <a class="header-anchor" href="#technical-specifications" aria-label="Permalink to &quot;Technical Specifications&quot;">​</a></h1><h2 id="protocol-specifications" tabindex="-1">Protocol Specifications <a class="header-anchor" href="#protocol-specifications" aria-label="Permalink to &quot;Protocol Specifications&quot;">​</a></h2><h3 id="core-parameters" tabindex="-1">Core Parameters <a class="header-anchor" href="#core-parameters" aria-label="Permalink to &quot;Core Parameters&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Block Time: 120 seconds</span></span>
<span class="line"><span>Block Size: Dynamic, max 2MB</span></span>
<span class="line"><span>Difficulty: Retargets every block</span></span>
<span class="line"><span>Hash Algorithm: RandomX</span></span>
<span class="line"><span>Address Format: Base58, 95 characters</span></span></code></pre></div><h3 id="cryptographic-primitives" tabindex="-1">Cryptographic Primitives <a class="header-anchor" href="#cryptographic-primitives" aria-label="Permalink to &quot;Cryptographic Primitives&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Curve: ed25519</span></span>
<span class="line"><span>Hash Function: CryptoNight variant</span></span>
<span class="line"><span>Signature Scheme: EdDSA</span></span>
<span class="line"><span>Key Derivation: Argon2id</span></span>
<span class="line"><span>Encryption: AES-256-GCM</span></span></code></pre></div><h3 id="network-parameters" tabindex="-1">Network Parameters <a class="header-anchor" href="#network-parameters" aria-label="Permalink to &quot;Network Parameters&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Default Port: 18080</span></span>
<span class="line"><span>RPC Port: 18081</span></span>
<span class="line"><span>P2P Protocol: Custom TCP</span></span>
<span class="line"><span>Max Connections: 8 outgoing, 512 incoming</span></span>
<span class="line"><span>Bootstrap Nodes: Hardcoded list of 8 nodes</span></span></code></pre></div><h2 id="consensus-rules" tabindex="-1">Consensus Rules <a class="header-anchor" href="#consensus-rules" aria-label="Permalink to &quot;Consensus Rules&quot;">​</a></h2><h3 id="block-validation" tabindex="-1">Block Validation <a class="header-anchor" href="#block-validation" aria-label="Permalink to &quot;Block Validation&quot;">​</a></h3><ul><li>Proof of Work verification</li><li>Timestamp checks</li><li>Size limits</li><li>Transaction validation</li><li>Coinbase rules</li></ul><h3 id="transaction-rules" tabindex="-1">Transaction Rules <a class="header-anchor" href="#transaction-rules" aria-label="Permalink to &quot;Transaction Rules&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Min Ring Size: 11</span></span>
<span class="line"><span>Max Ring Size: 32</span></span>
<span class="line"><span>Min Fee: Dynamic based on network load</span></span>
<span class="line"><span>Max Transaction Size: 100KB</span></span>
<span class="line"><span>Unlock Time: Optional, future block or timestamp</span></span></code></pre></div><h3 id="network-rules" tabindex="-1">Network Rules <a class="header-anchor" href="#network-rules" aria-label="Permalink to &quot;Network Rules&quot;">​</a></h3><ul><li>Peer discovery</li><li>Block propagation</li><li>Transaction relay</li><li>Ban scoring</li><li>Node synchronization</li></ul><h2 id="performance-metrics" tabindex="-1">Performance Metrics <a class="header-anchor" href="#performance-metrics" aria-label="Permalink to &quot;Performance Metrics&quot;">​</a></h2><h3 id="block-processing" tabindex="-1">Block Processing <a class="header-anchor" href="#block-processing" aria-label="Permalink to &quot;Block Processing&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Block Verification: &lt;100ms</span></span>
<span class="line"><span>Transaction Verification: &lt;10ms</span></span>
<span class="line"><span>Signature Verification: &lt;1ms</span></span>
<span class="line"><span>Memory Usage: ~2GB minimum</span></span>
<span class="line"><span>Storage Growth: ~2GB per year</span></span></code></pre></div><h3 id="network-performance" tabindex="-1">Network Performance <a class="header-anchor" href="#network-performance" aria-label="Permalink to &quot;Network Performance&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Transaction Propagation: &lt;5 seconds</span></span>
<span class="line"><span>Block Propagation: &lt;10 seconds</span></span>
<span class="line"><span>Sync Speed: ~1000 blocks/minute</span></span>
<span class="line"><span>Bandwidth Usage: ~100MB per day</span></span></code></pre></div><h2 id="hardware-requirements" tabindex="-1">Hardware Requirements <a class="header-anchor" href="#hardware-requirements" aria-label="Permalink to &quot;Hardware Requirements&quot;">​</a></h2><h3 id="minimum-specifications" tabindex="-1">Minimum Specifications <a class="header-anchor" href="#minimum-specifications" aria-label="Permalink to &quot;Minimum Specifications&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CPU: 4 cores</span></span>
<span class="line"><span>RAM: 4GB</span></span>
<span class="line"><span>Storage: 100GB SSD</span></span>
<span class="line"><span>Network: 1 Mbps</span></span></code></pre></div><h3 id="recommended-specifications" tabindex="-1">Recommended Specifications <a class="header-anchor" href="#recommended-specifications" aria-label="Permalink to &quot;Recommended Specifications&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CPU: 8+ cores</span></span>
<span class="line"><span>RAM: 16GB</span></span>
<span class="line"><span>Storage: 500GB SSD</span></span>
<span class="line"><span>Network: 10 Mbps</span></span></code></pre></div><h2 id="software-architecture" tabindex="-1">Software Architecture <a class="header-anchor" href="#software-architecture" aria-label="Permalink to &quot;Software Architecture&quot;">​</a></h2><h3 id="core-components" tabindex="-1">Core Components <a class="header-anchor" href="#core-components" aria-label="Permalink to &quot;Core Components&quot;">​</a></h3><ol><li><p>Node Daemon</p><ul><li>Network handling</li><li>Block processing</li><li>Transaction pool</li><li>State management</li></ul></li><li><p>Wallet Backend</p><ul><li>Key management</li><li>Transaction creation</li><li>Balance tracking</li><li>Address generation</li></ul></li><li><p>RPC Services</p><ul><li>JSON-RPC API</li><li>HTTP server</li><li>WebSocket support</li><li>IPC interface</li></ul></li></ol><h3 id="database-schema" tabindex="-1">Database Schema <a class="header-anchor" href="#database-schema" aria-label="Permalink to &quot;Database Schema&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Blocks {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Height: uint64 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PRIMARY KEY</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: bytes[32]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    Timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: uint64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Difficulty: uint64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Transactions: [TxHash]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Transactions {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: bytes[32] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PRIMARY KEY</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    BlockHeight: uint64</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    Timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: uint64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Fee: uint64</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    Size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: uint32</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="protocol-extensions" tabindex="-1">Protocol Extensions <a class="header-anchor" href="#protocol-extensions" aria-label="Permalink to &quot;Protocol Extensions&quot;">​</a></h2><h3 id="smart-contracts" tabindex="-1">Smart Contracts <a class="header-anchor" href="#smart-contracts" aria-label="Permalink to &quot;Smart Contracts&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>VM Type: Custom bytecode</span></span>
<span class="line"><span>Gas Model: Fixed per operation</span></span>
<span class="line"><span>State Model: UTXO-based</span></span>
<span class="line"><span>Contract Size: Max 64KB</span></span></code></pre></div><h3 id="privacy-features" tabindex="-1">Privacy Features <a class="header-anchor" href="#privacy-features" aria-label="Permalink to &quot;Privacy Features&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Ring Signatures: MLSAG</span></span>
<span class="line"><span>Stealth Addresses: One-time keys</span></span>
<span class="line"><span>RingCT: Bulletproofs</span></span>
<span class="line"><span>View Keys: Optional transparency</span></span></code></pre></div><h2 id="scalability-features" tabindex="-1">Scalability Features <a class="header-anchor" href="#scalability-features" aria-label="Permalink to &quot;Scalability Features&quot;">​</a></h2><h3 id="layer-1" tabindex="-1">Layer 1 <a class="header-anchor" href="#layer-1" aria-label="Permalink to &quot;Layer 1&quot;">​</a></h3><ul><li>Dynamic block size</li><li>Fee market</li><li>Transaction batching</li><li>Signature aggregation</li></ul><h3 id="layer-2" tabindex="-1">Layer 2 <a class="header-anchor" href="#layer-2" aria-label="Permalink to &quot;Layer 2&quot;">​</a></h3><ul><li>Payment channels</li><li>State channels</li><li>Sidechains</li><li>Cross-chain bridges</li></ul><h2 id="development-tools" tabindex="-1">Development Tools <a class="header-anchor" href="#development-tools" aria-label="Permalink to &quot;Development Tools&quot;">​</a></h2><h3 id="core-tools" tabindex="-1">Core Tools <a class="header-anchor" href="#core-tools" aria-label="Permalink to &quot;Core Tools&quot;">​</a></h3><ul><li>CLI wallet</li><li>RPC tools</li><li>Debug tools</li><li>Monitoring suite</li></ul><h3 id="development-kit" tabindex="-1">Development Kit <a class="header-anchor" href="#development-kit" aria-label="Permalink to &quot;Development Kit&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Node.js SDK example</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> salvium</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;salvium-sdk&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> node</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> salvium.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    network: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mainnet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18080</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="testing-framework" tabindex="-1">Testing Framework <a class="header-anchor" href="#testing-framework" aria-label="Permalink to &quot;Testing Framework&quot;">​</a></h2><h3 id="unit-tests" tabindex="-1">Unit Tests <a class="header-anchor" href="#unit-tests" aria-label="Permalink to &quot;Unit Tests&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Transaction&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    it</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;should validate correctly&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Test implementation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="integration-tests" tabindex="-1">Integration Tests <a class="header-anchor" href="#integration-tests" aria-label="Permalink to &quot;Integration Tests&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_network_sync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    node1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Node()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    node2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Node()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node1.height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node2.height</span></span></code></pre></div><h2 id="deployment" tabindex="-1">Deployment <a class="header-anchor" href="#deployment" aria-label="Permalink to &quot;Deployment&quot;">​</a></h2><h3 id="mainnet-requirements" tabindex="-1">Mainnet Requirements <a class="header-anchor" href="#mainnet-requirements" aria-label="Permalink to &quot;Mainnet Requirements&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Version: 1.0.0+</span></span>
<span class="line"><span>Protocol: v1</span></span>
<span class="line"><span>Network ID: 0x12</span></span>
<span class="line"><span>Seed Nodes: 8 minimum</span></span>
<span class="line"><span>Bootstrap Nodes: 4 minimum</span></span></code></pre></div><h3 id="testnet-configuration" tabindex="-1">Testnet Configuration <a class="header-anchor" href="#testnet-configuration" aria-label="Permalink to &quot;Testnet Configuration&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Version: Any</span></span>
<span class="line"><span>Protocol: Latest</span></span>
<span class="line"><span>Network ID: 0x13</span></span>
<span class="line"><span>Seed Nodes: 4 minimum</span></span>
<span class="line"><span>Bootstrap Nodes: 2 minimum</span></span></code></pre></div><h2 id="monitoring" tabindex="-1">Monitoring <a class="header-anchor" href="#monitoring" aria-label="Permalink to &quot;Monitoring&quot;">​</a></h2><h3 id="metrics" tabindex="-1">Metrics <a class="header-anchor" href="#metrics" aria-label="Permalink to &quot;Metrics&quot;">​</a></h3><ul><li>Block height</li><li>Network hashrate</li><li>Peer count</li><li>Transaction pool</li><li>Memory usage</li></ul><h3 id="alerts" tabindex="-1">Alerts <a class="header-anchor" href="#alerts" aria-label="Permalink to &quot;Alerts&quot;">​</a></h3><ul><li>Fork detection</li><li>Network partition</li><li>High memory usage</li><li>Peer disconnection</li><li>Error rates</li></ul><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2><h3 id="api-documentation" tabindex="-1">API Documentation <a class="header-anchor" href="#api-documentation" aria-label="Permalink to &quot;API Documentation&quot;">​</a></h3><ul><li>RPC methods</li><li>Parameters</li><li>Return values</li><li>Error codes</li></ul><h3 id="protocol-documentation" tabindex="-1">Protocol Documentation <a class="header-anchor" href="#protocol-documentation" aria-label="Permalink to &quot;Protocol Documentation&quot;">​</a></h3><ul><li>Specifications</li><li>Implementations</li><li>Updates</li><li>Changes</li></ul>`,65)]))}const u=s(t,[["render",l]]);export{k as __pageData,u as default};
